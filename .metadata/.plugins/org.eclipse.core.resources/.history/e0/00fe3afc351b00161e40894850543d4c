package com.ibm.innovationadmin.action;

import java.io.Console;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.annotation.Resource;
import javax.ejb.EJB;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.sql.DataSource;

import com.ibm.innovationadmin.constants.CommonConstants;
import com.ibm.innovationadmin.manager.AuthenticationManager;
import com.ibm.innovationadmin.manager.ProfileUserManager;
import com.ibm.innovationadmin.model.ProfileUserModel;

public class UserDetailAction extends HttpServlet {
	
	/**
	 * 
	 */
	private static final long serialVersionUID = -8579213088672797881L;
	
	
	@Resource(lookup = "jdbc/BLUDB")
	DataSource ds;
	
	@EJB
	private ProfileUserManager profileUserManager;
	
	private static final Logger log = Logger.getLogger(UserDetailAction.class.getName()); 
	private static final String editUser = "/view/editUser.jsp";
	private static final String forwardUrl = "/view/userDetail.jsp";
	
	protected void doGet(HttpServletRequest request,
			HttpServletResponse response) throws ServletException, IOException {
		log.info("GET User Detail");
		if(request.getSession().getAttribute("name") == null){
			request.getRequestDispatcher("login.jsp").forward(request, response);
		}else{
			int proId = Integer.parseInt(request.getParameter("proId"));
			ProfileUserModel user = profileUserManager.getProfileUserById(proId);
			request.setAttribute("user", user);
			request.getRequestDispatcher(forwardUrl).forward(request, response);
		}
	}
	
	protected void doPost(HttpServletRequest request,
			HttpServletResponse response) throws ServletException, IOException {
		log.info("POST User Detail");
		String actionType = request.getParameter("actionType");
		int proId = Integer.parseInt(request.getParameter("proId"));
		// if confirm reset password
		if(actionType.equals("resetpwd")){
			
			log.info("Reset PWD");
			String res = profileUserManager.changePassword(proId, CommonConstants.DEFAULT_PASSWORD);
			if(res.equals(CommonConstants.RETURN_SUCCESS)){
				request.setAttribute("msg", "Reset password complete. Default password is "+CommonConstants.DEFAULT_PASSWORD);
			}
			doGet(request,response);
			
		}// if click edit button
		else if(actionType.equals("redirectEdit")){
			
			ProfileUserModel user = profileUserManager.getProfileUserById(proId);
			request.setAttribute("type", "Edit");
			request.setAttribute("user", user);
			request.getRequestDispatcher(editUser).forward(request, response);
			
		}// if submit form edit
		else if(actionType.equals("edit")){
			
			String title = request.getParameter("title");
			String firstName = request.getParameter("firstName");
			String lastName = request.getParameter("lastName");
			String fullName = firstName +" "+ lastName;
			String company = request.getParameter("company");
			String contactNo = request.getParameter("contactNo");
			String email = request.getParameter("email");
			String username = request.getParameter("username");
			String password = request.getParameter("password");
			
			String res = profileUserManager.updateProfileUserById(title, proId, firstName, lastName, fullName, company, contactNo, email, username, password);
			if(res.equals(CommonConstants.RETURN_SUCCESS)){
				request.setAttribute("msg", "User detail is edited successful.");
			}
			doGet(request, response);
			
		}

		
		
	}
		
}
